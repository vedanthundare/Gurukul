{
  "agent_name": "PredictionAgent",
  "version": "2.0",
  "description": "Advanced time series forecasting agent using Prophet/ARIMA for delay risk, escalation likelihood, and daily agent load prediction",
  "capabilities": [
    "time_series_forecasting",
    "risk_assessment",
    "agent_scoring",
    "task_reassignment_recommendations",
    "trend_analysis",
    "capacity_planning"
  ],
  "models": {
    "primary": {
      "name": "Prophet",
      "type": "time_series",
      "provider": "Meta",
      "version": ">=1.1.4",
      "features": [
        "seasonal_decomposition",
        "trend_detection",
        "holiday_effects",
        "confidence_intervals",
        "logistic_growth"
      ]
    },
    "fallback": {
      "name": "ARIMA",
      "type": "time_series",
      "provider": "statsmodels",
      "version": ">=0.13.2",
      "features": [
        "autoregressive_modeling",
        "moving_averages",
        "differencing",
        "confidence_intervals"
      ]
    }
  },
  "input_data": {
    "historical_data": {
      "source": "data/*_person_history.json",
      "format": "json",
      "required_fields": [
        "timestamp",
        "discipline_score",
        "behavior_score",
        "total_expenses"
      ],
      "minimum_records": 30,
      "recommended_records": 90
    },
    "real_time_data": {
      "agent_load": "current task assignments per agent",
      "task_complexity": "task difficulty metrics",
      "system_performance": "response times and error rates"
    }
  },
  "output_metrics": {
    "delay_risk": {
      "type": "probability",
      "range": [0, 1],
      "description": "Probability of task delays occurring",
      "update_frequency": "daily",
      "confidence_intervals": true
    },
    "escalation_likelihood": {
      "type": "probability",
      "range": [0, 1],
      "description": "Probability of task escalation to higher priority",
      "update_frequency": "daily",
      "confidence_intervals": true
    },
    "daily_agent_load": {
      "type": "count",
      "range": [0, 100],
      "description": "Predicted number of tasks per agent per day",
      "update_frequency": "daily",
      "confidence_intervals": true
    }
  },
  "api_endpoints": {
    "/forecast": {
      "method": "GET",
      "description": "Get comprehensive forecast for all metrics",
      "parameters": {
        "days": {
          "type": "integer",
          "default": 30,
          "description": "Number of days to forecast"
        },
        "format": {
          "type": "string",
          "default": "json",
          "options": ["json", "csv"]
        }
      },
      "response_format": "multilingual_json"
    },
    "/forecast-json": {
      "method": "GET",
      "description": "Get daily load and escalation risk in chart-ready format",
      "parameters": {
        "days": {
          "type": "integer",
          "default": 7,
          "description": "Number of days for chart data"
        }
      },
      "response_format": "chart_ready_json"
    },
    "/score-agent": {
      "method": "POST",
      "description": "Score an agent based on current load and predicted capacity",
      "parameters": {
        "agent_id": {
          "type": "string",
          "required": true,
          "description": "Unique identifier for the agent"
        },
        "current_load": {
          "type": "integer",
          "required": false,
          "description": "Current number of tasks assigned to agent"
        }
      },
      "response_format": "agent_score_json"
    }
  },
  "integration_points": {
    "sales_agent": {
      "trigger": "/forecast endpoint call",
      "adaptation": "adjust lead qualification based on predicted load",
      "frequency": "daily"
    },
    "reassignment_agent": {
      "trigger": "high risk prediction",
      "adaptation": "automatic task redistribution",
      "frequency": "real_time"
    },
    "marketing_agent": {
      "trigger": "/forecast endpoint call",
      "adaptation": "adjust campaign intensity based on capacity",
      "frequency": "weekly"
    }
  },
  "performance_metrics": {
    "accuracy": {
      "delay_risk_mae": "< 0.15",
      "escalation_likelihood_mae": "< 0.12",
      "agent_load_mape": "< 20%"
    },
    "response_time": {
      "forecast_generation": "< 5 seconds",
      "agent_scoring": "< 1 second",
      "risk_assessment": "< 2 seconds"
    },
    "reliability": {
      "uptime": "> 99.5%",
      "error_rate": "< 1%",
      "fallback_success": "> 95%"
    }
  },
  "configuration": {
    "prophet_settings": {
      "growth": "logistic",
      "daily_seasonality": true,
      "weekly_seasonality": true,
      "yearly_seasonality": false,
      "seasonality_mode": "additive"
    },
    "arima_settings": {
      "default_order": [1, 1, 1],
      "fallback_order": [0, 1, 0],
      "auto_select": false
    },
    "risk_thresholds": {
      "high_risk": 0.7,
      "medium_risk": 0.4,
      "low_risk": 0.0
    },
    "agent_capacity": {
      "optimal_load": 20,
      "max_load": 30,
      "warning_threshold": 0.8
    }
  },
  "logging": {
    "level": "INFO",
    "components": [
      "model_training",
      "prediction_generation",
      "risk_assessment",
      "agent_scoring",
      "api_requests"
    ],
    "output_file": "simulation_logs.txt",
    "rotation": "daily"
  },
  "dependencies": {
    "python": ">=3.8",
    "required_packages": [
      "prophet>=1.1.4",
      "pandas>=1.5.3",
      "numpy>=1.24.0",
      "statsmodels>=0.13.2",
      "scikit-learn>=1.3.0",
      "scipy>=1.10.0"
    ],
    "optional_packages": [
      "plotly>=5.18.0",
      "matplotlib>=3.5.0"
    ]
  },
  "deployment": {
    "environment": "production",
    "scaling": {
      "min_instances": 1,
      "max_instances": 5,
      "cpu_threshold": 70,
      "memory_threshold": 80
    },
    "health_checks": {
      "endpoint": "/health",
      "interval": 30,
      "timeout": 10
    }
  },
  "testing": {
    "unit_tests": "test_prediction_agent.py",
    "integration_tests": "test_forecast_integration.py",
    "performance_tests": "test_forecast_performance.py",
    "edge_case_tests": [
      "high_latency_agents",
      "bursty_workloads",
      "data_corruption",
      "model_failures"
    ]
  },
  "documentation": {
    "readme": "README.md",
    "api_docs": "OpenAPI/Swagger specification",
    "examples": "curl_examples.sh",
    "troubleshooting": "TROUBLESHOOTING.md"
  },
  "team_integration": {
    "rishabh": {
      "role": "Dashboard Integration",
      "endpoint": "/forecast-json",
      "deliverable": "Chart consumption logic"
    },
    "karthikeya": {
      "role": "Multilingual Reports",
      "endpoint": "/forecast",
      "deliverable": "Language-specific formatting"
    },
    "akash": {
      "role": "Orchestration Memory",
      "endpoint": "/score-agent",
      "deliverable": "Agent handoff coordination"
    }
  },
  "version_history": {
    "1.0": "Basic linear forecasting models",
    "2.0": "Advanced Prophet/ARIMA implementation with multi-agent integration"
  }
}
